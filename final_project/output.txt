---> Creating data object...

---> at ./data/raw-img/cane/, dog is a class
---> at ./data/raw-img/cavallo/, horse is a class
---> at ./data/raw-img/gallina/, chicken is a class
---> at ./data/raw-img/pecora/, sheep is a class

---> Computing principal components...
---> Saving class PC projections figure: ./output/figure_0_dog_w_180_PC_48x48
---> Saving class PC variance figure: ./output/figure_PCvar_0_dog_img_48x48
---> Computing principal components...
---> Saving class PC projections figure: ./output/figure_1_horse_w_180_PC_48x48
---> Saving class PC variance figure: ./output/figure_PCvar_1_horse_img_48x48
---> Computing principal components...
---> Saving class PC projections figure: ./output/figure_4_chicken_w_180_PC_48x48
---> Saving class PC variance figure: ./output/figure_PCvar_4_chicken_img_48x48
---> Computing principal components...
---> Saving class PC projections figure: ./output/figure_7_sheep_w_180_PC_48x48
---> Saving class PC variance figure: ./output/figure_PCvar_7_sheep_img_48x48
---> Saving dataXY object to binary file...
---> Saving eigenXY object to binary file...
---> Saving labels object to binary file...

---> Labels and class indices:
   | -  0 : dog
   | -  1 : horse
   | -  2 : chicken
   | -  3 : sheep

---> Shuffling PCA image dataset...
   |---> PCA image set shape: (1200, 181)
---> Create test set: sampling PCA image dataset w/o replacement...
   |---> PCA image training set shape: (960, 181)
   |---> PCA image test set shape: (240, 181)
---> Initializing KNN classifier... 

\------> Test model with: training data
---> Predicting class based on KNN: in weighted mode...
---> Computing distance to K nearest neighbors...

  | TestX ID | KNN IDs (Class IDs) - trainXY                        |
  |__________|______________________________________________________|
       1     |    0(0)  935(0)  760(0)  917(0)  589(0)  449(0)  709(0)    
       2     |    1(2)  110(2)  346(2)  545(2)  828(2)  645(2)  444(2)    
       3     |    2(1)  613(1)  637(1)  939(1)  660(1)   79(1)  290(1)    
       4     |    3(0)  699(0)  708(0)  422(0)  127(0)   57(0)  305(0)    
       5     |    4(1)  665(1)  179(1)  568(1)  247(0)  600(1)  634(1)    
       6     |    5(2)  439(2)  335(0)  538(2)  243(2)  100(0)  947(2)    
       7     |    6(0)  193(2)  304(2)  292(0)  583(3)  254(3)  505(2)    
       8     |    7(0)  900(0)  233(0)  852(0)  880(0)  315(0)  389(0)    
       9     |    8(0)  308(0)  537(0)  257(0)  172(0)  891(0)  135(0)    
      10     |    9(2)  304(2)  931(2)  251(3)  427(2)  947(2)  773(2)    
     ...     |  ...   


---------->>>
---> Printing test results, in weighted mode...

  | TestX ID |   Y    |  Yest  |
  |__________|________|________|
       1     |    0   |    0 
       2     |    2   |    2 
       3     |    1   |    1 
       4     |    0   |    0 
       5     |    1   |    1 
       6     |    2   |    2 
       7     |    0   |    0 
       8     |    0   |    0 
       9     |    0   |    0 
      10     |    2   |    2 
      ...    |   ...  |   ... 

   \-------->>> Prediction accuracy (weighted): 100.000%  <<-|


---> Predicting class based on KNN: in simple mode...
---> Computing distance to K nearest neighbors...

  | TestX ID | KNN IDs (Class IDs) - trainXY                        |
  |__________|______________________________________________________|
       1     |    0(0)  935(0)  760(0)  917(0)  589(0)  449(0)  709(0)    
       2     |    1(2)  110(2)  346(2)  545(2)  828(2)  645(2)  444(2)    
       3     |    2(1)  613(1)  637(1)  939(1)  660(1)   79(1)  290(1)    
       4     |    3(0)  699(0)  708(0)  422(0)  127(0)   57(0)  305(0)    
       5     |    4(1)  665(1)  179(1)  568(1)  247(0)  600(1)  634(1)    
       6     |    5(2)  439(2)  335(0)  538(2)  243(2)  100(0)  947(2)    
       7     |    6(0)  193(2)  304(2)  292(0)  583(3)  254(3)  505(2)    
       8     |    7(0)  900(0)  233(0)  852(0)  880(0)  315(0)  389(0)    
       9     |    8(0)  308(0)  537(0)  257(0)  172(0)  891(0)  135(0)    
      10     |    9(2)  304(2)  931(2)  251(3)  427(2)  947(2)  773(2)    
     ...     |  ...   


---------->>>
---> Printing test results, in simple mode...

  | TestX ID |   Y    |  Yest  |
  |__________|________|________|
       1     |    0   |    0 
       2     |    2   |    2 
       3     |    1   |    1 
       4     |    0   |    0 
       5     |    1   |    1 
       6     |    2   |    2 
       7     |    0   |    2 
       8     |    0   |    0 
       9     |    0   |    0 
      10     |    2   |    2 
      ...    |   ...  |   ... 

   \-------->>> Prediction accuracy (simple): 92.917%  <<-|


\------> Test model with: test data
---> Predicting class based on KNN: in weighted mode...
---> Computing distance to K nearest neighbors...

  | TestX ID | KNN IDs (Class IDs) - trainXY                        |
  |__________|______________________________________________________|
       1     |  193(2)  323(2)  434(0)  304(2)  117(3)  292(0)  549(0)    
       2     |  818(0)  136(0)  438(0)  247(0)  777(3)  617(0)  566(0)    
       3     |  292(0)  935(0)  608(0)  348(0)  472(0)  760(0)  677(0)    
       4     |  755(3)  176(3)  654(3)  304(2)  723(3)  292(0)  364(0)    
       5     |  307(0)   78(0)  856(0)  537(0)  752(0)  612(0)  718(0)    
       6     |  505(2)  349(2)  734(2)  304(2)  444(2)  437(2)  292(0)    
       7     |  822(2)  755(3)  935(0)  193(2)  777(3)  917(0)  825(1)    
       8     |  822(2)  775(2)  302(2)  944(1)  479(2)   90(2)  386(2)    
       9     |  114(1)  694(1)  732(1)  582(1)  763(1)  292(0)  446(1)    
      10     |  917(0)  777(3)  364(0)  612(0)  307(0)  752(0)  247(0)    
     ...     |  ...   


---------->>>
---> Printing test results, in weighted mode...

  | TestX ID |   Y    |  Yest  |
  |__________|________|________|
       1     |    0   |    2 
       2     |    0   |    0 
       3     |    0   |    0 
       4     |    3   |    3 
       5     |    0   |    0 
       6     |    2   |    2 
       7     |    2   |    2 
       8     |    2   |    2 
       9     |    1   |    1 
      10     |    0   |    0 
      ...    |   ...  |   ... 

   \-------->>> Prediction accuracy (weighted): 87.500%  <<-|


---> Predicting class based on KNN: in simple mode...
---> Computing distance to K nearest neighbors...

  | TestX ID | KNN IDs (Class IDs) - trainXY                        |
  |__________|______________________________________________________|
       1     |  193(2)  323(2)  434(0)  304(2)  117(3)  292(0)  549(0)    
       2     |  818(0)  136(0)  438(0)  247(0)  777(3)  617(0)  566(0)    
       3     |  292(0)  935(0)  608(0)  348(0)  472(0)  760(0)  677(0)    
       4     |  755(3)  176(3)  654(3)  304(2)  723(3)  292(0)  364(0)    
       5     |  307(0)   78(0)  856(0)  537(0)  752(0)  612(0)  718(0)    
       6     |  505(2)  349(2)  734(2)  304(2)  444(2)  437(2)  292(0)    
       7     |  822(2)  755(3)  935(0)  193(2)  777(3)  917(0)  825(1)    
       8     |  822(2)  775(2)  302(2)  944(1)  479(2)   90(2)  386(2)    
       9     |  114(1)  694(1)  732(1)  582(1)  763(1)  292(0)  446(1)    
      10     |  917(0)  777(3)  364(0)  612(0)  307(0)  752(0)  247(0)    
     ...     |  ...   


---------->>>
---> Printing test results, in simple mode...

  | TestX ID |   Y    |  Yest  |
  |__________|________|________|
       1     |    0   |    0 
       2     |    0   |    0 
       3     |    0   |    0 
       4     |    3   |    3 
       5     |    0   |    0 
       6     |    2   |    2 
       7     |    2   |    0 
       8     |    2   |    2 
       9     |    1   |    1 
      10     |    0   |    0 
      ...    |   ...  |   ... 

   \-------->>> Prediction accuracy (simple): 88.333%  <<-|



---> End of process.
